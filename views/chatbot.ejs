<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <title>ChatBot SOC</title>
</head>

<body>
    <div class="container">
        <header><%- include('partials/header') %></header>
        
        <ul class="messages-list">
            <% chats.forEach(chat=> { 
                %> <% if (chat.user==='user' ) { %>
                    <li class="message">
                        <div class="avatar img-custom">
                            <img src="/images/user-avatar.png" width="30px" />
                        </div>
                        <div class="text sent">
                            <div class="message-sender">
                                <b>You</b>
                            </div>
                            <div class="message-content">
                                <%= chat.message %>
                            </div>
                        </div>
                    </li>
                    <% } 
                    
                    else { %>
                        <li class="message">
                            <div class="avatar img-custom">
                                <img src="/images/aichatbot-avatar-2.png" width="30px" />
                            </div>
                            <div class="text received">
                                <div class="message-receiver">
                                    <b>AI Chatbot</b>
                                </div>
                                <div class="message-content">
                                    <%= chat.message %>
                                </div>
                            </div>
                        </li>
                        <% } %>
            <% }); %>
        </ul>
        
        <form class="message-form expanded" method="POST" enctype="multipart/form-data">
            <ul class="file-container"></ul>
            <div class="input-group">
                <textarea type="text" class="form-control message-input img-custom" id="messageInput" name="message" rows="1"
                    placeholder="Type message..."></textarea>
                <label class="btn-upload img-custom" for="pdfFileInput">
                    <img src="/images/file.png" width="25px" />
                    <input type="file" class="file-input" id="pdfFileInput" name="file" accept="application/pdf" />
                </label>
                <button type="submit" class="btn-send img-custom" id="sendMessage">
                    <img src="/images/send.png" width="25px" />
                </button>
            </div>
        </form>

        <footer><%- include('partials/footer') %></footer>
    </div>

    <script>
        function autoResizeMessageInput(event) {
            event.style.height = "1.8rem";
            let newHeight = event.scrollHeight;

            const lineHeight = parseFloat(getComputedStyle(event).lineHeight);
            const maxHeight = lineHeight * 4;

            if (newHeight > maxHeight) newHeight = maxHeight;
            event.style.height = newHeight + "px";
        }

        function unselectedFile(event) {
            const fileItem = event.target.closest('li');
            const fileNameContainer = document.querySelector(".file-container");

            if (fileItem) {
                fileItem.remove();
            }

            const pdfFileInput = document.getElementById("pdfFileInput");
            if (pdfFileInput) {
                pdfFileInput.value = "";
            }

            if (fileNameContainer && fileNameContainer.children.length === 0) {
                fileNameContainer.innerHTML = ''; 
            }
        }

        function parseInput(input) {
            const lines = input.trim().split('\n');
            const result = {};
            const stack = [];
            let current = result;

            for (const line of lines) {
                const trimmed = line.trim();

                const headingMatch = trimmed.match(/^(#+)(.+?): (.+)$/);
                if (headingMatch) {
                    const level = headingMatch[1].length;
                    const key = headingMatch[2].trim().toLowerCase().replace(/\s+/g, '');
                    const content = headingMatch[3].trim();

                    while (stack.length >= level) stack.pop();

                    const parent = stack.length ? stack[stack.length - 1] : result;
                    parent[key] = parent[key] || { content: content };
                    stack.push(parent[key]);
                    continue;
                }

                const listMatch = trimmed.match(/^\*\*(.+?)\*\*: (.+)$/);
                if (listMatch) {
                    const key = listMatch[1].trim().toLowerCase();
                    const values = listMatch[2].trim().split(',').map(item => item.trim());
                    result[key] = values;
                }
            }

            return result;
        }

        function generateHTML(data) {
            let html = "";

            function traverse(node, level = 1) {
                if (node.content) {
                    // html += `<h${level}>${node.content}</h${level}>\n`;
                    html += `<div class="level${level}">${node.content}</div>\n`;
                }
                for (const key in node) {
                    if (key !== "content" && typeof node[key] === "object") {
                        traverse(node[key], level + 1);
                    }
                }
            }

            for (const key in data) {
                if (["images", "tables", "pages", "sources"].includes(key)) {
                    if (key === "images" || key === "tables") {
                        data[key].forEach(url => {
                            html += `<img src="${url}" alt="Image" width="858px" height="348px"/></br>\n`;
                        });
                    } 
                    else if (key === "pages") {
                        html += `<p>${key.charAt(0).toUpperCase() + key.slice(1)}: ${data[key].join(", ")}</p>\n`;
                    }
                    else if (key === "sources") {
                        data[key].forEach(url => {
                            html += `<a href="${url}" target="_blank">Tham kháº£o: ${url}</a>\n`;
                        });
                    }
                } else {
                    traverse(data[key]);
                }
            }

            return html;
        }

        document.addEventListener("DOMContentLoaded", function() {
            const messagesList = document.querySelector(".messages-list");
            const messageForm = document.querySelector(".message-form");
            const fileNameContainer = document.querySelector(".file-container");

            const messageInput = document.getElementById("messageInput");
            const pdfFileInput = document.getElementById("pdfFileInput");
            const sendButton = document.getElementById("sendMessage");

            // Ensure all elements are available before adding event listeners
            if (messageInput && messageForm && pdfFileInput && sendButton) {

                const maxWords = 500;
                const maxChars = 500;
                const lineHeight = 20;
                const maxHeight = lineHeight * 5;

                window.addEventListener('resize', function(event) {
                    event.preventDefault();
                    autoResizeMessageInput(messageInput);
                });

                pdfFileInput.addEventListener("change", (event) => {
                    event.preventDefault();
                    const selectedFile = event.target.files[0];
                    const fileName = selectedFile.name;

                    if (selectedFile) {
                        fileNameContainer.innerHTML = `
                            <li class="file" >
                                <div class="file-name">${fileName}</div>
                                <div class="img-custom">
                                    <img src="/images/unselected.png" style="margin-top: 10px; margin-left: 3px; margin-right: 3px" width="25px" onclick="unselectedFile(event)"/>
                                </div>
                            </li>
                        `;
                    } else {
                        fileNameContainer.innerHTML = ``;
                    }
                });
                
                messageInput.setAttribute('maxlength', maxChars);

                messageInput.addEventListener('input', function(event) {
                    event.preventDefault();
                    autoResizeMessageInput(messageInput);
                    const words = messageInput.value.trim().split(/\s+/);

                    if (words.length > maxWords) {
                        const trimmedText = words.slice(0, maxWords).join(" ");
                        messageInput.value = trimmedText;
                        alert(`You have reached the maximum word limit of ${maxWords}.`);
                    }

                    if (messageInput.value.length > maxChars) {
                        messageInput.value = messageInput.value.slice(0, maxChars);
                        alert(`You have reached the maximum char limit of ${maxChars}.`)
                    }
                });
                
                messageForm.addEventListener("submit", (event) => {
                    event.preventDefault();

                    const user_message = messageInput.value.trim();
                    const selectedFile = pdfFileInput.files[0];
                    const fileName = selectedFile ? selectedFile.name : "";
                    if (user_message.length === 0 && !selectedFile) return;

                    const messageItem_send = document.createElement("li");
                    messageItem_send.classList.add("message");
                    if (fileName !== ""){
                        messageItem_send.innerHTML = `
                            <div class="avatar img-custom">
                                <img src="/images/user-avatar.png" width="30px" />
                            </div>
                            <div class="text sent">
                                <div class="message-sender">
                                    <b>You</b>
                                </div>
                                <div class="message-content">
                                    ${fileName} </br>
                                    ${user_message}
                                </div>
                            </div>
                        `;
                    } else {
                        messageItem_send.innerHTML = `
                            <div class="avatar img-custom">
                                <img src="/images/user-avatar.png" width="30px" />
                            </div>
                            <div class="text sent">
                                <div class="message-sender">
                                    <b>You</b>
                                </div>
                                <div class="message-content">
                                    ${user_message}
                                </div>
                            </div>
                        `;
                    }
                    messagesList.appendChild(messageItem_send);

                    const messageItem_received = document.createElement("li");
                    messageItem_received.classList.add("message");
                    messageItem_received.innerHTML = `
                        <div class="avatar img-custom">
                            <img src="/images/aichatbot-avatar-2.png" width="30px" />
                        </div>
                        <div class="text received">
                            <div class="message-receiver">
                                <b>AI Chatbot</b>
                            </div>
                            <div class="message-content">
                                <div class="loader"></div>
                            </div>
                        </div>
                    `;
                    messagesList.appendChild(messageItem_received);

                    messagesList.scrollTop = messagesList.scrollHeight;
                    sendButton.disabled = true;

                    fetch('/', {
                        method: 'POST',
                        body: new FormData(messageForm)
                    })
                    .then((response) => {
                        let chatbot_message = "";
                        const eventSource = new EventSource("/onMessage");

                        eventSource.onmessage = function(event) {
                            if (event.data === '[DONE]') {

                                eventSource.close();
                                sendButton.disabled = false;
                                console.log(chatbot_message);

                                const parsedOutput = parseInput(chatbot_message);
                                const htmlOutput = generateHTML(parsedOutput);

                                const messageItem_received = document.createElement("li");
                                messageItem_received.classList.add("message");
                                messageItem_received.innerHTML = `
                                    <div class="avatar img-custom">
                                        <img src="/images/aichatbot-avatar-2.png" width="30px" />
                                    </div>
                                    <div class="text received">
                                        <div class="message-receiver">
                                            <b>AI Chatbot</b>
                                        </div>
                                        <div class="message-content">
                                            ${htmlOutput}
                                        </div>
                                    </div>
                                `;
                                if (messagesList.lastChild) {
                                    messagesList.removeChild(messagesList.lastChild);
                                }
                                messagesList.appendChild(messageItem_received);
                                messagesList.scrollTop = messagesList.scrollHeight;
                                console.log(htmlOutput);

                            } else {
                                const chunk = JSON.parse(event.data);
                                chatbot_message += chunk.message

                                const messageItem_received = document.createElement("li");
                                messageItem_received.classList.add("message");
                                messageItem_received.innerHTML = `
                                    <div class="avatar img-custom">
                                        <img src="/images/aichatbot-avatar-2.png" width="30px" />
                                    </div>
                                    <div class="text received">
                                        <div class="message-receiver">
                                            <b>AI Chatbot</b>
                                        </div>
                                        <div class="message-content">
                                            ${chatbot_message}
                                        </div>
                                    </div>
                                `;
                                if (messagesList.lastChild) {
                                    messagesList.removeChild(messagesList.lastChild);
                                }
                                messagesList.appendChild(messageItem_received);
                                messagesList.scrollTop = messagesList.scrollHeight;
                            }
                        };
                    })
                    .catch((error) => {
                        const errorMessageItem = document.createElement("li");
                        errorMessageItem.classList.add("message");
                        errorMessageItem.innerHTML = `
                            <div class="avatar img-custom">
                                <img src="/images/aichatbot-avatar-2.png" width="30px" />
                            </div>
                            <div class="text received">
                                <div class="message-receiver">
                                    <b>AI Chatbot</b>
                                </div>
                                <div class="message-content">
                                    An error occurred while sending your message. Please try again.
                                </div>
                            </div>
                        `;

                        if (messagesList.lastChild) {
                            messagesList.removeChild(messagesList.lastChild);
                        }
                        messagesList.appendChild(errorMessageItem);
                        messagesList.scrollTop = messagesList.scrollHeight;
                        sendButton.disabled = false;
                    });

                    messageForm.reset();
                    messageInput.style.height = "1.8rem";
                    fileNameContainer.innerHTML = "";
                    messageInput.focus();
                });

                messageInput.focus();
                messagesList.scrollTop = messagesList.scrollHeight;
            }
        });
    </script>

</body>

</html>